<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>ca.purpleowl.examples.spring.cloud</groupId>
	<artifactId>example-client</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>example-client</name>
	<description>Demo client for Spring Cloud Config</description>

	<properties>
		<docker.image.prefix>docker.io/mightychip</docker.image.prefix>
		<java.version>11</java.version>
		<spring-cloud.version>Hoxton.SR7</spring-cloud.version>
	</properties>

	<dependencies>
		<!-- This provides an endpoint that will allow us to refresh our application context.  That's useful if
			properties get updated or something!  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- For our web services -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Undertow has less overhead and better performance for REST services!  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>

		<!-- base dependency for Spring Cloud stuff -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter</artifactId>
		</dependency>

		<!-- dependency for Spring Cloud Config -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<!-- The following two dependencies are required for the Cloud Config retry mechanism -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>

		<!-- useful for seeing what's going on under the hood -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- the next two dependencies are required for the DB layer -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>

		<!-- DB Driver for "prod" profile -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- DB Driver for "dev" profile -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layers>
						<enabled>true</enabled>
					</layers>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- Creation of the Docker Image is enabled with a profile... if you're building this locally, you'll need to
			change the repository name appropriately -->
		<profile>
			<id>build-and-push-docker-image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>1.4.2</version>
						<executions>
							<execution>
								<id>tag-latest</id>
								<phase>install</phase>
								<goals>
									<goal>build</goal>
									<goal>tag</goal>
									<goal>push</goal>
								</goals>
								<configuration>
									<tag>latest</tag>
								</configuration>
							</execution>
							<execution>
								<id>tag-version</id>
								<phase>install</phase>
								<goals>
									<goal>build</goal>
									<goal>tag</goal>
									<goal>push</goal>
								</goals>
								<configuration>
									<tag>${project.version}</tag>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<repository>docker.io/mightychip/cloud-config-demo-client</repository>
							<buildArgs>
								<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
							</buildArgs>
						</configuration>
						<!-- needed since ~JDK9 to avoid a build error via this plugin -->
						<dependencies>
							<dependency>
								<groupId>javax.activation</groupId>
								<artifactId>activation</artifactId>
								<version>1.1.1</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
